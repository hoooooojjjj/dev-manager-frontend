---
alwaysApply: true
---

## 메타

- **Rule Name**: Next.js App Structure & Conventions
- **Type**: Project Rule (Auto-Attached)
- **Applies To**: Agent, Inline Edit
- **Paths**: 프로젝트 전체

## 폴더 구조

```
src/
├── app/                    # Next.js App Router 페이지 ✅
│   ├── layout.tsx         # 루트 레이아웃 (Providers + Header)
│   ├── page.tsx           # 홈페이지 (랜딩 + CTA)
│   ├── new/               # 새 프로젝트 생성 ✅
│   │   └── page.tsx       # Intake 폼 (OAuth + 검증)
│   ├── projects/          # 프로젝트 관리 ✅
│   │   ├── page.tsx       # 프로젝트 목록 (검색 + 필터)
│   │   └── [id]/          # 프로젝트 상세
│   │       ├── page.tsx   # 대시보드 (타임라인 + SSE)
│   │       └── research/  # 리서치 패널 (3탭)
│   │           └── page.tsx
│   └── drafts/[id]/       # Dev Spec 관련 ✅
│       ├── page.tsx       # 명세서 뷰어 (목차 + 인용)
│       ├── review/        # 리뷰 인터페이스 (Diff)
│       │   └── page.tsx
│       └── prompts/       # AI 프롬프트 번들
│           └── page.tsx
├── components/            # React 컴포넌트 ✅
│   ├── ui/               # Vanilla Extract 기반 UI 컴포넌트 (shadcn/ui 호환)
│   ├── forms/            # 폼 컴포넌트 (IntakeForm + 테스트)
│   ├── layout/           # 레이아웃 (Header, Breadcrumb)
│   ├── projects/         # 프로젝트 관련 (Dashboard, List)
│   ├── research/         # 리서치 패널 컴포넌트
│   ├── drafts/           # Dev Spec 뷰어 컴포넌트
│   └── prompts/          # AI 프롬프트 컴포넌트
├── lib/                  # 라이브러리 & 유틸리티 ✅
│   ├── api/              # API 클라이언트
│   │   ├── client.ts     # Axios + 인터셉터 + 에러 처리
│   │   ├── schemas.ts    # Zod 스키마 (완전한 타입 정의)
│   │   ├── auth.ts       # OAuth API 호출
│   │   ├── sse.ts        # Server-Sent Events 유틸
│   │   └── errors.ts     # ProblemDetails 에러 클래스
│   ├── hooks/            # 커스텀 훅 (useOAuth)
│   ├── providers/        # Context Providers (Query, Theme, MSW)
│   ├── store/            # Zustand 스토어 (useUi + 토스트)
│   ├── styles/           # Vanilla Extract 전역 스타일 (theme, breakpoints, animations)
│   └── utils/            # 유틸리티 (format, 상태 색상 등)
├── mocks/                # MSW API 모킹 ✅
│   ├── handlers.ts       # API 핸들러 + 샘플 데이터
│   ├── browser.ts        # 브라우저 Service Worker
│   └── node.ts           # Node.js 테스트용
├── test/                 # 테스트 설정 ✅
│   └── setup.ts          # Vitest 글로벌 설정
└── types/                # TypeScript 타입 정의 ✅
    └── globals.d.ts      # CSS 모듈 타입 선언
```

## 코딩 컨벤션 (완전 적용됨)

- **TS**: `strict: true`, `exactOptionalPropertyTypes: true`, never `any` ✅
- **폼**: React Hook Form + Zod + `zodResolver`, 실시간 검증 ✅
- **데이터**: TanStack Query (staleTime=5s, 스마트 캐싱), Axios 클라이언트 ✅
- **UI**: Vanilla Extract + shadcn/ui + Radix + Lucide Icons ✅
- **상태 관리**: 서버(TanStack Query) + 로컬 UI(Zustand) + URL(SearchParams) ✅
- **에러 처리**: ProblemDetails 표준, Correlation ID, 토스트 알림 ✅
- **국제화**: ko-KR 기본, Asia/Seoul 시간대, 하드코딩 텍스트 없음 ✅
- **테스트**: Vitest + RTL (단위) + Playwright (E2E) + MSW (모킹) ✅
- **품질**: ESLint + Prettier + Husky + TypeScript strict ✅

## 파일 네이밍

- 페이지: `page.tsx`, 레이아웃: `layout.tsx`, 클라이언트 컴포넌트 `Client` 접미사 금지(파일 상단 `'use client'`).
- 컴포넌트: 파스칼케이스, 훅: `useX.ts`, 스토어: `useX.ts`.
- 스타일: `*.css.ts` (Vanilla Extract), 컴포넌트와 동일 디렉토리.
- 테스트: `*.test.tsx`(RTL), e2e는 Playwright `*.spec.ts`.
- 스키마/타입: `*.schema.ts`, `*.types.ts`.

## API 연동 규칙

- 상태 조회는 폴링 간격 3s 또는 SSE.
- 엔드포인트 합의: `/api/v1/projects/:id/status`, `/events`(SSE), `/drafts/:id`, `PATCH /drafts/:id`, `POST /drafts/:id/publish`.

## 리서치 패널 구현 규칙

- 탭: References / Job Postings / Competency Map.
- 최근 12개월 필터, 도메인 배지, 신뢰도 아이콘.
- Competency↔Solution 매핑 표와 태그.
- KPI 배지: 권위≥5, 공고≥3.

## Dev Spec 뷰 규칙

- 좌측 목차 자동 생성, 섹션 앵커.
- 인용 포맷별 아이콘: `code://`, `pr://`, `doc://`, `web://`, `job://`.
- 체크리스트 진행도(TL;DR/정량/인용/Prompts 연결률).

## 리뷰/패치 규칙

- 입력: `section_key`, `instruction`, `strict_citation`
- 응답의 before/after를 side-by-side Diff로 표시.
- 승인 시 버전 증가 표시, 롤백 가능.

## 접근성 & 성능

- 포커스 스타일, aria 속성, 대비 ≥ 4.5:1, reduced-motion 대응.
- Suspense+Skeleton, 코드블록 지연 하이라이트, 큰 리스트 가상 스크롤.

## 금지/주의

- pages 라우터 사용 금지(App Router only).
- any, 암묵적 any, 암묵적 any 리턴 금지.
- 로컬 스토리지에 토큰 저장 금지(서버 보관).
- 초기 단계에서 S3 등 외부 오브젝트 스토리지 사용 금지.

## 프롬프트 템플릿(요약)

- **Codegen**: *경로/의존성/상태관리/검증/접근성/테스트*를 명시하고 전체 파일 출력.
- **Test**: 주요 상호작용 3건 이상(RHF 검증 실패, SSE 끊김/재연결, 체크리스트 활성화)
- **Review**: 변경의 근거 인용과 Trade-off 포함, 최소 diff.

## 출력 포맷(생성 요구)

- “변경된 파일 목록” → “전체 코드” → “적용 방법(명령어/스크립트)” → “차후 작업(ToDo 5개)”
